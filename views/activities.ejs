<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/styles.css">
    <title>Monthly Record</title>
</head>
<body>
    <div class="sidebar">
        <img class="arrows" src="https://i.pinimg.com/564x/d4/60/fe/d460fe089360a8776144942b2e526087.jpg">
        <h2>Healro</h2>
        <nav>
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/profile/<%= user.id %>">Profile</a></li>
                <li><a href="/activities">Activities</a></li>
                <li><a href="/contents">Contents</a></li>
                <li><a href="/posting">My Feed</a></li>
                <li><a href="/communities">Communities</a></li>
            </ul>
        </nav>
    </div>
        <!-- Main Content -->
    <div class="main-content">
        <header>
            <h1>Healro</h1>
            <nav>
                <ul>
                    <li><form action="/logout" method="post" style="display:inline;"><button type="submit">Log Off</button></form></li>
                </ul>
            </nav>
        </header>
        <section class="my-activities">
            <!-- Calendar -->
            <div class="calendar">
                <h2>Select Month</h2>
                <div class="monthSelect">
                    <!-- Calendar Content -->
                    <input type="month" class="calendar-input" id="calendarInput">
                </div>
                <div class="calendar-grid" id="calendarGrid">
                    <!-- Calendar dates will be dynamically generated here -->
                </div>
            </div>


            <!-- activities data and notes-->
            <div class="tools">
                <!--activity data-->
                <div class="activity-data">
                    <h2>Selected Date: <span id="selectedDate"></span></h2>
                    <div class="health-stat"></div>
                    <!-- Data will be populated here when a date is clicked -->
                </div>

                <div class="notes">
                    <h2>Notes</h2>
                    <div class="notes-content" id="notesContent">
                        <p>Select a date to view your notes:</p>
                        <div class="n">
                            <!-- Notes will display here when a date is clicked -->
                        </div>
                    </div>
                    <div class="new-notes" id="newNotes">
                        <textarea placeholder="Write or update your notes here..."></textarea>
                        <button id="save-notes-button">Save Notes</button>
                    </div>
                </div>
                
            </div>
        </section>
            
        <!--removed customise(input data function in activities page)-->
        <!-- <button class="customize-button" onclick="openCustomizePopup()">Customize</button> -->

        <section class="connections">
            
        </section>
        
    </div>
    <footer>
        <p>&copy; 2024 Healro. All rights reserved.</p>
    </footer>

    <!--generate calendar and fetch health-stats-->
    <script>
    document.addEventListener('DOMContentLoaded', function () {
    let selectedDate;

    document.getElementById('calendarInput').addEventListener('change', function() {
        const calendarGrid = document.querySelector('.calendar-grid');
        calendarGrid.innerHTML = ''; // Clear previous dates
        
        const selectedMonth = new Date(this.value);
        const year = selectedMonth.getFullYear();
        const month = selectedMonth.getMonth();
        
        const firstDayOfMonth = new Date(year, month, 1);
        const lastDayOfMonth = new Date(year, month + 1, 0);
        
        const firstDayOfWeek = firstDayOfMonth.getDay();
        const daysInMonth = lastDayOfMonth.getDate();
        
        const adjustedFirstDay = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;
        
        for (let i = 0; i < adjustedFirstDay; i++) {
            const emptyCell = document.createElement('div');
            calendarGrid.appendChild(emptyCell);
        }
        
        for (let day = 1; day <= daysInMonth; day++) {
            const dateCell = document.createElement('div');
            dateCell.classList.add('calendar-date');
            dateCell.textContent = day;

            dateCell.addEventListener('click', function() {
                selectedDate = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;

                console.log(`Date clicked: ${selectedDate}`); // Debugging info

                const selectedDateElement = document.getElementById('selectedDate');
                selectedDateElement.textContent = new Date(selectedDate).toDateString();

                fetchHealthData(selectedDate);
                fetchNotes(selectedDate);
            });

            calendarGrid.appendChild(dateCell);
        }
    });

    //fetching health data by date
    function fetchHealthData(date) {
        fetch(`/get-health-data?date=${date}`)
            .then(response => response.json())
            .then(data => {
                console.log('Health data received:', data); // Debugging info
                const healthStatsContainer = document.querySelector('.health-stat');
                healthStatsContainer.innerHTML = '';  // Clear previous data

                if (data.length > 0) {
                    data.forEach(stat => {
                        healthStatsContainer.innerHTML += `
                            <div class="stat-item">
                                <p>Calories: ${stat.calories}</p>
                                <p>Steps: ${stat.steps}</p>
                                <p>MVPA: ${stat.mvpa}</p>
                                <p>Sleep: ${stat.sleep} hours</p>
                            </div>`;
                    });
                } else {
                    healthStatsContainer.innerHTML = '<p>No data available for this date.</p>';
                }
            })
            .catch(error => console.error('Error fetching health data:', error));
    }

    //fetch notes by date
    function fetchNotes(date) {
        console.log(`Fetching notes for date: ${date}`); // Debugging info

        fetch(`/get-health-data?date=${date}`)
            .then(response => response.json())
            .then(data => {
                console.log('Notes received:', data); // Debugging info

                const notesContainer = document.querySelector('.n');
                notesContainer.innerHTML = '';  // Clear previous data

                if (data.length > 0 && data[0].notes) {
                    notesContainer.innerHTML = `<p>${data[0].notes}</p>`;
                } else {
                    notesContainer.innerHTML = '<p>No notes available for this date.</p>';
                }
            })
            .catch(error => console.error('Error fetching notes:', error));
    }

    document.getElementById('save-notes-button').addEventListener('click', function () {
        const notesTextarea = document.querySelector('textarea');
        const notes = notesTextarea.value;

        //need to have a date selected before saving a note
        if (!selectedDate) {
            alert('Please select a date first.');
            return;
        }

        console.log(`Saving notes for date: ${selectedDate}, Content: ${notes}`); // Debugging info


        fetch('/save-notes', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                date: selectedDate,
                notes: notes,
            }),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Save notes response:', data); // Debugging info

            if (data.success) {
                alert('Notes saved successfully!');
                fetchNotes(selectedDate); // Refresh the notes display
            } else {
                alert('Failed to save notes.');
            }
        })
        .catch(error => console.error('Error saving notes:', error));
    });
});

    </script>
</body>
</html>
